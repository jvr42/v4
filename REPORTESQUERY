// get the ammount of sale from cocina and bar from a preset from/to date pair.
db.ordenes.mapReduce(
function(){
	for(var i = 0; i < this.productos.length; i++){
		var key = this.productos[i].tipo;		
		var value = this.productos[i].precio * this.productos[i].cantidad;		
		emit(key, value);
	}
},
function(key,totales){
	return Array.sum(totales);
},
{
	query: {
		status: "cerrada",
		$and: [
			{
			    fecha: {
			        $gte: 1500922220950
			    }
			},
			{
			    fecha: {
			        $lte: 1501008620950
			    }
			}
		]
	},
	out: "ordenes_procesadas"
})


// get the ammount of sale from cocina and bar from the whole database of closed orders.
db.ordenes.mapReduce(
function(){
	for(var i = 0; i < this.productos.length; i++){
		var key = this.productos[i].tipo;
		var value = this.productos[i].precio * this.productos[i].cantidad;
		emit(key, value);
	}
},
function(key,totales){
	return Array.sum(totales);
},
{
	query: {
		status: "cerrada"
	},
	out: "ordenes_procesadas"
})


// get the ammount of products sold from the whole database of closed orders.
db.ordenes.mapReduce(
function(){
	for(var i = 0; i < this.productos.length; i++){
		var key = this.productos[i].name;
		var value = Number(this.productos[i].cantidad);
		emit(key, value);
	}
},
function(key,totales){
	return Array.sum(totales);
},
{
	query: {
		status: "cerrada",
		$and: [
			{
			    fecha: {
			        $gte: 1500922220950
			    }
			},
			{
			    fecha: {
			        $lte: 1501008620950
			    }
			}
		]
	},
	out: "ordenes_procesadas"
})